{"version":3,"sources":["assets\\script\\board\\chess\\blackchess\\kingblack.js"],"names":["cc","Class","Component","properties","place","type","Node","redchess","blackchess","map","showpossiblemove","getComponent","touchmove","posmove","getChildren","redc","blackc","parent","self","i","length","active","pauseSystemEvents","x","blackcastleleftbound","blackcastlerightbound","y","blackcastledownbound","blackcastleupbound","node","s","k","j","setScale","scale","blacktouchmove","start"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        place: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        redchess: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        blackchess: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        map:{\r\n            default: null,\r\n            type: cc.Node,\r\n        }\r\n    },\r\n\r\n    showpossiblemove(){\r\n        let map = this.map.getComponent('boardinfo');\r\n        let touchmove = this.map.getComponent('touchmove');\r\n        var place = this.place;\r\n        var posmove = place.getChildren();\r\n        var redchess = this.redchess;\r\n        var redc = redchess.getChildren();\r\n        var blackchess = this.blackchess;\r\n        var blackc = blackchess.getChildren();\r\n        redc.parent = place;\r\n        blackc.parent = place;\r\n        self = this;\r\n                //deactive before another click\r\n                for (var i = 0; i < posmove.length; i++) {\r\n                    if (posmove[i].active == true) {\r\n                        posmove[i].active = false;\r\n                    }\r\n                }\r\n                //blackturn\r\n                redchess.pauseSystemEvents(true);\r\n                //logicmove\r\n                for (var i = 0; i < posmove.length; i++) {\r\n                    if ((posmove[i].x >= map.blackcastleleftbound) && (posmove[i].x <= map.blackcastlerightbound) &&\r\n                        (posmove[i].y >= map.blackcastledownbound) && (posmove[i].y <= map.blackcastleupbound)) {\r\n                        //right\r\n                        if ((posmove[i].x == this.node.x + map.s) && (posmove[i].y == this.node.y)) {\r\n                            posmove[i].active = true;\r\n                        }\r\n                        //left\r\n                        if ((posmove[i].x == this.node.x - map.s) && (posmove[i].y == this.node.y)) {\r\n                            posmove[i].active = true;\r\n                        }\r\n                        //up\r\n                        if ((posmove[i].x == this.node.x) && (posmove[i].y == this.node.y + map.s)) {\r\n                            posmove[i].active = true;\r\n                        }\r\n                        //down\r\n                        if ((posmove[i].x == this.node.x) && (posmove[i].y == this.node.y - map.s)) {\r\n                            posmove[i].active = true;\r\n                        }\r\n                    }\r\n                    //block other chess\r\n                    for (var k = 0; k < blackc.length; k++) {\r\n                        if ((blackc[k].x == posmove[i].x) && (blackc[k].y == posmove[i].y)) {\r\n                            posmove[i].active = false;\r\n                        }\r\n                    }\r\n                    //hightlight killable\r\n                    for (var j = 0; j < redc.length; j++) {\r\n                        if ((redc[j].x == posmove[i].x) &&\r\n                            (redc[j].y == posmove[i].y) &&\r\n                            (posmove[i].active == true)) {\r\n                            posmove[i].setScale(map.scale, map.scale);\r\n                        }\r\n                    }\r\n                    touchmove.blacktouchmove(i);\r\n                }\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}