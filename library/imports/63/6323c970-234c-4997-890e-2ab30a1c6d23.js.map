{"version":3,"sources":["assets\\script\\room\\joinroom.js"],"names":["cc","Class","Component","properties","roomID","type","Label","Pass","onLoad","join_room","PlayerInfo","director","getScene","getChildByName","getComponent","RoomInfos","uid","string","pass","then","data","id","Player1","console","log","rid","state","loadScene","Player2","start"],"mappings":";;;;;;AAAA;;AAKA;AACAA,EAAE,CAACC,KAAH,CAAS;AACP,aAASD,EAAE,CAACE,SADL;AAGPC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE;AACN,iBAAS,IADH;AAENC,MAAAA,IAAI,EAAEL,EAAE,CAACM;AAFH,KADE;AAKVC,IAAAA,IAAI,EAAE;AACJ,iBAAS,IADL;AAEJF,MAAAA,IAAI,EAAEL,EAAE,CAACM;AAFL;AALI,GAHL;AAcPE,EAAAA,MAdO,oBAcE,CAAE,CAdJ;AAePC,EAAAA,SAfO,uBAeK;AACV,QAAIC,UAAU,GAAGV,EAAE,CAACW,QAAH,CACdC,QADc,GAEdC,cAFc,CAEC,YAFD,EAGdC,YAHc,CAGD,YAHC,CAAjB;AAIA,QAAIC,SAAS,GAAGf,EAAE,CAACW,QAAH,CACbC,QADa,GAEbC,cAFa,CAEE,WAFF,EAGbC,YAHa,CAGA,WAHA,CAAhB;AAIA,QAAIE,GAAG,GAAGN,UAAU,CAACM,GAArB;AACA,QAAIZ,MAAM,GAAG,KAAKA,MAAL,CAAYa,MAAzB;AACA,QAAIC,IAAI,GAAG,KAAKX,IAAL,CAAUU,MAArB;AAEA,uCAAYb,MAAZ,EAAoBe,IAApB,CAAyB,UAACC,IAAD,EAAU;AACjC,UAAIA,IAAI,CAACA,IAAL,CAAUC,EAAV,IAAgBjB,MAApB,EAA4B;AAC1B,YAAIgB,IAAI,CAACA,IAAL,CAAUE,OAAV,IAAqB,IAAzB,EAA+B;AAC7B,kDAAiBlB,MAAjB,EAAyBY,GAAzB,EAA8BG,IAA9B,CAAmC,UAACC,IAAD,EAAU;AAC3CG,YAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAL,YAAAA,SAAS,CAACU,GAAV,GAAgBrB,MAAhB;AACAM,YAAAA,UAAU,CAACgB,KAAX,GAAmB,SAAnB;AACA1B,YAAAA,EAAE,CAACW,QAAH,CAAYgB,SAAZ,CAAsB,MAAtB;AACD,WALD;AAMD,SAPD,MAOO,IAAIP,IAAI,CAACA,IAAL,CAAUQ,OAAV,IAAqB,IAAzB,EAA+B;AACpC,kDAAiBxB,MAAjB,EAAyBY,GAAzB,EAA8BG,IAA9B,CAAmC,UAACC,IAAD,EAAU;AAC3CG,YAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAL,YAAAA,SAAS,CAACU,GAAV,GAAgBrB,MAAhB;AACAM,YAAAA,UAAU,CAACgB,KAAX,GAAmB,SAAnB;AACA1B,YAAAA,EAAE,CAACW,QAAH,CAAYgB,SAAZ,CAAsB,MAAtB;AACD,WALD;AAMD,SAPM,MAOA;AACLJ,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACF;AACF,KApBD,WAoBS,YAAY;AACnBD,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KAtBD;AAuBD,GAnDM;AAoDPK,EAAAA,KApDO,mBAoDC,CAAE,CApDH,CAsDP;;AAtDO,CAAT","sourceRoot":"/","sourcesContent":["import {\r\n  getroombyID,\r\n  joinroombyIDasp1,\r\n  joinroombyIDasp2,\r\n} from \"../axios_connection\";\r\n// const fetch = require('node-fetch')\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    roomID: {\r\n      default: null,\r\n      type: cc.Label,\r\n    },\r\n    Pass: {\r\n      default: null,\r\n      type: cc.Label,\r\n    },\r\n  },\r\n\r\n  onLoad() {},\r\n  join_room() {\r\n    let PlayerInfo = cc.director\r\n      .getScene()\r\n      .getChildByName(\"PlayerInfo\")\r\n      .getComponent(\"PlayerInfo\");\r\n    let RoomInfos = cc.director\r\n      .getScene()\r\n      .getChildByName(\"RoomInfos\")\r\n      .getComponent(\"RoomInfos\");\r\n    let uid = PlayerInfo.uid;\r\n    let roomID = this.roomID.string;\r\n    let pass = this.Pass.string;\r\n\r\n    getroombyID(roomID).then((data) => {\r\n      if (data.data.id == roomID) {\r\n        if (data.data.Player1 == null) {\r\n          joinroombyIDasp1(roomID, uid).then((data) => {\r\n            console.log(data);\r\n            RoomInfos.rid = roomID;\r\n            PlayerInfo.state = \"Player1\";\r\n            cc.director.loadScene(\"room\");\r\n          });\r\n        } else if (data.data.Player2 == null) {\r\n          joinroombyIDasp2(roomID, uid).then((data) => {\r\n            console.log(data);\r\n            RoomInfos.rid = roomID;\r\n            PlayerInfo.state = \"Player2\";\r\n            cc.director.loadScene(\"room\");\r\n          });\r\n        } else {\r\n          console.log(\"Roomfull!\");\r\n        }\r\n      }\r\n    }).catch(function () {\r\n      console.log(\"Promise Rejected\");\r\n    });\r\n  },\r\n  start() {},\r\n\r\n  // update (dt) {},\r\n});\r\n"]}