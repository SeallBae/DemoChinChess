{"version":3,"sources":["assets\\script\\Login.js"],"names":["cc","Class","Component","properties","onLoad","clickEventHandler","EventHandler","target","node","component","handler","customEventData","button","getComponent","Button","clickEvents","push","callback","event","name","jsb","reflection","callStaticMethod"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE,CACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,GAHP;AAsBL;AAEAC,EAAAA,MAAM,EAAE,kBAAY;AAGZ,QAAIC,iBAAiB,GAAG,IAAIL,EAAE,CAACE,SAAH,CAAaI,YAAjB,EAAxB;AACAD,IAAAA,iBAAiB,CAACE,MAAlB,GAA2B,KAAKC,IAAhC,CAJY,CAI0B;;AACtCH,IAAAA,iBAAiB,CAACI,SAAlB,GAA8B,OAA9B,CALY,CAK0B;;AACtCJ,IAAAA,iBAAiB,CAACK,OAAlB,GAA4B,UAA5B;AACAL,IAAAA,iBAAiB,CAACM,eAAlB,GAAoC,QAApC;AAEA,QAAIC,MAAM,GAAG,KAAKJ,IAAL,CAAUK,YAAV,CAAuBb,EAAE,CAACc,MAA1B,CAAb;AACAF,IAAAA,MAAM,CAACG,WAAP,CAAmBC,IAAnB,CAAwBX,iBAAxB;AACH,GAnCA;AAqCDY,EAAAA,QAAQ,EAAE,kBAAUC,KAAV,EAAiBP,eAAjB,EAAkC;AACxC;AACA,QAAIH,IAAI,GAAGU,KAAK,CAACX,MAAjB;AACA,QAAIK,MAAM,GAAGJ,IAAI,CAACK,YAAL,CAAkBb,EAAE,CAACc,MAArB,CAAb,CAHwC,CAKxC;;AAEA,QAAG,KAAKN,IAAL,CAAUW,IAAV,KAAmB,oBAAtB,EAA2C;AACvCC,MAAAA,GAAG,CAACC,UAAJ,CAAeC,gBAAf,CAAgC,+BAAhC,EAAiE,eAAjE,EAAkF,KAAlF;AACH,KAFD,MAEM,IAAG,KAAKd,IAAL,CAAUW,IAAV,KAAmB,kBAAtB,EAAyC;AAC3CC,MAAAA,GAAG,CAACC,UAAJ,CAAeC,gBAAf,CAAgC,iCAAhC,EAAmE,eAAnE,EAAoF,KAApF;AACH,KAXuC,CAaxC;;AACH,GAnDA,CAoDL;AACA;AAEA;;AAvDK,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    \r\n    // LIFE-CYCLE CALLBACKS:\r\n    \r\n    onLoad: function () {\r\n            \r\n\r\n            var clickEventHandler = new cc.Component.EventHandler();\r\n            clickEventHandler.target = this.node; // This node is the node to which your event handler code component belongs\r\n            clickEventHandler.component = \"Login\";// This is the code file name\r\n            clickEventHandler.handler = \"callback\";\r\n            clickEventHandler.customEventData = \"foobar\";\r\n\r\n            var button = this.node.getComponent(cc.Button);\r\n            button.clickEvents.push(clickEventHandler);\r\n        },\r\n\r\n        callback: function (event, customEventData) {\r\n            // here event is a Event object, you can get events sent to the event node node\r\n            var node = event.target;\r\n            var button = node.getComponent(cc.Button);\r\n\r\n            // console.log(this.node.name);\r\n\r\n            if(this.node.name === \"SignInWithFacebook\"){\r\n                jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/Login\", \"FBHandleLogin\", \"()V\");\r\n            }else if(this.node.name === \"SignInWithGoogle\"){\r\n                jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/GGLogin\", \"GGHandleLogin\", \"()V\");     \r\n            }\r\n            \r\n            // here the customEventData parameter is equal to you set before the \"foobar\"\r\n        }\r\n    // start () {\r\n    // },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}