{"version":3,"sources":["assets\\script\\board\\chess\\blackchess\\rookblack.js"],"names":["cc","Class","Component","properties","place","type","Node","redchess","blackchess","map","showpossiblemove","getComponent","touchmove","posmove","getChildren","redc","blackc","parent","self","i","length","active","pauseSystemEvents","x","node","j","y","k","setScale","scale","blacktouchmove","start"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        place: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        redchess: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        blackchess: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        map:{\r\n            default: null,\r\n            type: cc.Node,\r\n        }\r\n    },\r\n\r\n    showpossiblemove(){\r\n        let map = this.map.getComponent('boardinfo');\r\n        let touchmove = this.map.getComponent('touchmove');\r\n        var place = this.place;\r\n        var posmove = place.getChildren();\r\n        var redchess = this.redchess;\r\n        var redc = redchess.getChildren();\r\n        var blackchess = this.blackchess;\r\n        var blackc = blackchess.getChildren();\r\n        redc.parent = place;\r\n        blackc.parent = place;\r\n        self = this;\r\n                //deactive before another click\r\n                for (var i = 0; i < posmove.length; i++) {\r\n                    if (posmove[i].active == true) {\r\n                        posmove[i].active = false;\r\n                    }\r\n                }\r\n                //blackturn\r\n                redchess.pauseSystemEvents(true);\r\n                //logic moving\r\n                for (var i = 0; i < posmove.length; i++) {\r\n                    //vertical\r\n                    if (posmove[i].x == this.node.x) {\r\n                        posmove[i].active = true;\r\n                        //verticalblock\r\n                        for (var j = 0; j < redc.length; j++) {\r\n                            if (redc[j].x == (self.node.x) && (redc[j].y != (self.node.y))) {\r\n                                if (((posmove[i].y > self.node.y) && (posmove[i].y > redc[j].y) && (redc[j].y > self.node.y))\r\n                                    || ((posmove[i].y < self.node.y) && (posmove[i].y < redc[j].y) && (redc[j].y < self.node.y))) {\r\n                                    posmove[i].active = false;\r\n                                }\r\n                            }\r\n                        }\r\n                        for (var k = 0; k < blackc.length; k++) {\r\n                            if (blackc[k].x == (self.node.x) && (blackc[k].y != (self.node.y))) {\r\n                                if (((posmove[i].y > self.node.y) && (posmove[i].y > blackc[k].y) && (blackc[k].y > self.node.y))\r\n                                    || ((posmove[i].y < self.node.y) && (posmove[i].y < blackc[k].y) && (blackc[k].y < self.node.y))) {\r\n                                    posmove[i].active = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //horizontal\r\n                    if ((posmove[i].y == this.node.y)) {\r\n                        posmove[i].active = true;\r\n                        //horizontalblock\r\n                        for (var j = 0; j < redc.length; j++) {\r\n                            if (redc[j].y == (self.node.y) && (redc[j].x != (self.node.x))) {\r\n                                if (((posmove[i].x > self.node.x) && (posmove[i].x > redc[j].x) && (redc[j].x > self.node.x))\r\n                                    || ((posmove[i].x < self.node.x) && (posmove[i].x < redc[j].x) && (redc[j].x < self.node.x))) {\r\n                                    posmove[i].active = false;\r\n                                }\r\n                            }\r\n                        }\r\n                        for (var k = 0; k < blackc.length; k++) {\r\n                            if (blackc[k].y == (self.node.y) && (blackc[k].x != (self.node.x))) {\r\n                                if (((posmove[i].x > self.node.x) && (posmove[i].x > blackc[k].x) && (blackc[k].x > self.node.x))\r\n                                    || ((posmove[i].x < self.node.x) && (posmove[i].x < blackc[k].x) && (blackc[k].x < self.node.x))) {\r\n                                    posmove[i].active = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //block other chess\r\n                    for (var k = 0; k < blackc.length; k++) {\r\n                        if ((blackc[k].x == posmove[i].x) && (blackc[k].y == posmove[i].y)) {\r\n                            posmove[i].active = false;\r\n                        }\r\n                    }\r\n                    //hightlight killable\r\n                    for (var j = 0; j < redc.length; j++) {\r\n                        if ((redc[j].x == posmove[i].x) &&\r\n                            (redc[j].y == posmove[i].y) &&\r\n                            (posmove[i].active == true)) {\r\n                            posmove[i].setScale(map.scale, map.scale);\r\n                        }\r\n                    }\r\n                    touchmove.blacktouchmove(i);\r\n                }\r\n    },\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}