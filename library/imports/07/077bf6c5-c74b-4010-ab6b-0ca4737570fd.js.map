{"version":3,"sources":["assets\\script\\board\\update.js"],"names":["cc","Class","Component","properties","movecodelist","type","Label","place","Node","redchess","blackchess","deadredchess","deadblackchess","map","movelist","rid","onLoad","start","update","dt","PlayerInfo","director","getScene","getChildByName","getComponent","RoomInfos","redc","getChildren","blackc","then","data","console","log","Name","j","length","name","tween","delay","to","position","v2","Xed","Yed","scale","X","Y","easing","Player1","uid","pauseSystemEvents","Player2","resumeSystemEvents","k","countreddead","chesssize","call","node","parent","countblackdead"],"mappings":"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","sourceRoot":"/","sourcesContent":["import { getlastmovehistory, getroombyID } from \"../axios_connection\";\r\nimport {\r\n  receivedchessPosition,\r\n  receiveddeadchess,\r\n  receivedroomID,\r\n  sendchessPosition,\r\n} from \"../socket_connection\";\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    movecodelist: {\r\n      default: null,\r\n      type: cc.Label,\r\n    },\r\n    place: {\r\n      default: null,\r\n      type: cc.Node,\r\n    },\r\n    redchess: {\r\n      default: null,\r\n      type: cc.Node,\r\n    },\r\n    blackchess: {\r\n      default: null,\r\n      type: cc.Node,\r\n    },\r\n    deadredchess: {\r\n      default: null,\r\n      type: cc.Node,\r\n    },\r\n    deadblackchess: {\r\n      default: null,\r\n      type: cc.Node,\r\n    },\r\n    map: {\r\n      default: null,\r\n      type: cc.Node,\r\n    },\r\n    movelist: [],\r\n    rid: {\r\n      default: null,\r\n      type: cc.Label,\r\n    },\r\n  },\r\n\r\n  onLoad() {},\r\n  start() {},\r\n  update(dt = 10000) {\r\n    let PlayerInfo = cc.director\r\n      .getScene()\r\n      .getChildByName(\"PlayerInfo\")\r\n      .getComponent(\"PlayerInfo\");\r\n    let RoomInfos = cc.director\r\n      .getScene()\r\n      .getChildByName(\"RoomInfos\")\r\n      .getComponent(\"RoomInfos\");\r\n    var rid = RoomInfos.rid;\r\n    var redchess = this.redchess;\r\n    var redc = redchess.getChildren();\r\n    var blackchess = this.blackchess;\r\n    var blackc = blackchess.getChildren();\r\n    let map = this.map.getComponent(\"boardinfo\");\r\n    let deadredchess = this.deadredchess;\r\n    let deadblackchess = this.deadblackchess;\r\n    var movecodelist = this.movecodelist;\r\n\r\n    receivedchessPosition()\r\n      .then((data) => { \r\n        console.log(\"dataname\" + data.Name);\r\n        \r\n        for (var j = 0; j < redc.length; j++) {\r\n          if (\r\n            redc[j].name == data.Name\r\n          ) {\r\n            //move chess\r\n            cc.tween(redc[j])\r\n              .delay(0.1)\r\n              .to(0.125, {\r\n                position: cc.v2(\r\n                  data.Xed,\r\n                  data.Yed + 5\r\n                ),\r\n                scale: 1.1,\r\n              })\r\n              .delay(0.125)\r\n              .to(\r\n                0.5,\r\n                {\r\n                  position: cc.v2(\r\n                    data.X,\r\n                    data.Y + 15\r\n                  ),\r\n                  scale: 1.3,\r\n                },\r\n                { easing: \"backIn\" }\r\n              )\r\n              .delay(0.125)\r\n              .to(0.125, {\r\n                position: cc.v2(\r\n                  data.X,\r\n                  data.Y,\r\n                ),\r\n                scale: 1,\r\n              })\r\n              .start();\r\n\r\n            getroombyID(rid).then((data) => {\r\n              if (data.data.Player1 == PlayerInfo.uid) {\r\n                redchess.pauseSystemEvents(true);\r\n                blackchess.pauseSystemEvents(true);\r\n              }\r\n              if (data.data.Player2 == PlayerInfo.uid) {\r\n                redchess.pauseSystemEvents(true);\r\n                blackchess.resumeSystemEvents(true);\r\n              }\r\n            });\r\n            break;\r\n          }\r\n        }\r\n\r\n        for (var k = 0; k < blackc.length; k++) {\r\n          if (\r\n            blackc[k].name == data.Name\r\n          ) {\r\n            //move chess\r\n            cc.tween(blackc[k])\r\n              .delay(0.1)\r\n              .to(0.125, {\r\n                position: cc.v2(\r\n                  data.Xed,\r\n                  data.Yed + 5\r\n                ),\r\n                scale: 1.1,\r\n              })\r\n              .delay(0.125)\r\n              .to(\r\n                0.5,\r\n                {\r\n                  position: cc.v2(\r\n                    data.X,\r\n                    data.Y + 15\r\n                  ),\r\n                  scale: 1.3,\r\n                },\r\n                { easing: \"backIn\" }\r\n              )\r\n              .delay(0.125)\r\n              .to(0.125, {\r\n                position: cc.v2(\r\n                  data.X,\r\n                  data.Y\r\n                ),\r\n                scale: 1,\r\n              })\r\n              .start();\r\n\r\n            getroombyID(rid).then((data) => {\r\n              if (data.data.Player1 == PlayerInfo.uid) {\r\n                redchess.resumeSystemEvents(true);\r\n                blackchess.pauseSystemEvents(true);\r\n              }\r\n              if (data.data.Player2 == PlayerInfo.uid) {\r\n                redchess.pauseSystemEvents(true);\r\n                blackchess.pauseSystemEvents(true);\r\n              }\r\n            });\r\n            break;\r\n          }\r\n        }\r\n\r\n        // if (\r\n        //   this.movelist.length == 0 ||\r\n        //   this.movelist[this.movelist.length - 1] !==\r\n        //     JSON.stringify(data[data.length - 1])\r\n        // ) {\r\n        //   this.movelist.push(JSON.stringify(data[data.length - 1]));\r\n        // }\r\n        // movecodelist.string = this.movelist;\r\n\r\n      })\r\n      .catch(function () {\r\n        console.log(\"Promise Rejected\");\r\n      });\r\n\r\n    receiveddeadchess()\r\n      .then((data) => {\r\n        for (var j = 0; j < redc.length; j++) {\r\n          if (redc[j].name == data.name) {\r\n            map.countreddead++;\r\n            // redc[j].setScale(0.8, 0.8);\r\n            cc.tween(redc[j])\r\n              .delay(1)\r\n              .to(0, {\r\n                position: cc.v2(187.5 - map.countreddead * map.chesssize, 0),\r\n              })\r\n              .call(() => {\r\n                this.node.pauseSystemEvents(true);\r\n                this.node.parent = deadredchess;\r\n              })\r\n              .start();\r\n\r\n            // redc[j].anchorX = 1;\r\n            // redc[j].anchorY = 0.5;\r\n            // redc[j].y = 0;\r\n            // redc[j].x = 187.5 - map.countreddead * map.chesssize;\r\n            // redc[j].pauseSystemEvents(true);\r\n            // redc[j].parent = deadredchess;\r\n          }\r\n        }\r\n        for (var k = 0; k < blackc.length; k++) {\r\n          if (blackc[k].name == data.name) {\r\n            map.countblackdead++;\r\n            cc.tween(blackc[k])\r\n              .delay(1)\r\n              .to(0, {\r\n                position: cc.v2(-187.5 + map.countblackdead * map.chesssize, 0),\r\n              })\r\n              .call(() => {\r\n                this.node.pauseSystemEvents(true);\r\n                this.node.parent = deadblackchess;\r\n              })\r\n              .start();\r\n\r\n            // blackc[k].anchorX = 0;\r\n            // blackc[k].anchorY = 0.5;\r\n            // blackc[k].y = 0;\r\n            // blackc[k].x = -187.5 + map.countblackdead * map.chesssize;\r\n            // blackc[k].pauseSystemEvents(true);\r\n            // blackc[k].parent = deadblackchess;\r\n          }\r\n        }\r\n      })\r\n      .catch(function () {\r\n        console.log(\"Promise Rejected\");\r\n      });\r\n  },\r\n});\r\n"]}