{"version":3,"sources":["assets\\script\\board\\touchmove.js"],"names":["cc","Class","Component","properties","place","type","Node","redchess","blackchess","map","deadredchess","deadblackchess","movecodelist","updateall","redtouchmove","i","getComponent","posmove","getChildren","redc","blackc","parent","active","on","self","node","isChildOf","kill","k","length","x","y","name","movecode","push","xed","yed","console","table","setScale","off","reset","blacktouchmove","j","start","onLoad","update","dt"],"mappings":"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","sourceRoot":"/","sourcesContent":["// let socket = io(\"http://localhost:3000\", {transports : ['websocket'],\r\n//     query: {\r\n//       userId: 1,\r\n//       cc:\"cc\",\r\n//     },\r\n//   });\r\n\r\nimport {\r\n  receivedchessPosition,\r\n  sendchessPosition,\r\n  senddeadchess,\r\n  receiveddeadchess,\r\n  sendstate,\r\n} from \"../socket_connection\";\r\n\r\n// const { io } = require(\"socket.io-client\");\r\n// import * as io from \"socket.io-client\";\r\n// let socket = io.connect('http://localhost:3000/');\r\n//\r\ncc.Class({\r\n  extends: cc.Component,\r\n  properties: {\r\n    place: {\r\n      default: null,\r\n      type: cc.Node,\r\n    },\r\n    redchess: {\r\n      default: null,\r\n      type: cc.Node,\r\n    },\r\n    blackchess: {\r\n      default: null,\r\n      type: cc.Node,\r\n    },\r\n    map: {\r\n      default: null,\r\n      type: cc.Node,\r\n    },\r\n    deadredchess: {\r\n      default: null,\r\n      type: cc.Node,\r\n    },\r\n    deadblackchess: {\r\n      default: null,\r\n      type: cc.Node,\r\n    },\r\n    movecodelist: {\r\n      default: null,\r\n      type: cc.Node,\r\n    },\r\n    updateall: {\r\n      default: null,\r\n      type: cc.Node,\r\n    },\r\n    // socket: io.connect(\"http://localhost:3000\", { transports : ['websocket'] }),\r\n  },\r\n  redtouchmove(i) {\r\n    let updateall = this.updateall.getComponent(\"update\");\r\n    let map = this.map.getComponent(\"boardinfo\");\r\n    let deadblackchess = this.deadblackchess;\r\n    var place = this.place;\r\n    var posmove = place.getChildren();\r\n    var redchess = this.redchess;\r\n    var redc = redchess.getChildren();\r\n    var blackchess = this.blackchess;\r\n    var blackc = blackchess.getChildren();\r\n    redc.parent = place;\r\n    blackc.parent = place;\r\n\r\n    if (posmove[i].active == true) {\r\n      posmove[i].on(\r\n        \"touchstart\",\r\n        function () {\r\n          if (self.node.isChildOf(redchess)) {\r\n            var kill = 0;\r\n            for (var k = 0; k < blackc.length; k++) {\r\n              if (blackc[k].x == this.x && blackc[k].y == this.y) {\r\n                senddeadchess({\r\n                  name: blackc[k].name,\r\n                });\r\n                kill++;\r\n                map.movecode.push({\r\n                  name: self.node.name,\r\n                  xed: self.node.x,\r\n                  yed: self.node.y,\r\n                  x: this.x,\r\n                  y: this.y,\r\n                });\r\n                console.table(map.movecode);\r\n                sendchessPosition(map.movecode);\r\n                // console.log(self.node.name, this.x, this.y);\r\n                // const data = receivedchessPosition();\r\n                // console.log(data);\r\n\r\n                this.setScale(1, 1);\r\n                this.off(\"touchstart\", this.function, posmove[i]);\r\n                break;\r\n              }\r\n            }\r\n            if (kill == 0) {\r\n              map.movecode.push({\r\n                name: self.node.name,\r\n                xed: self.node.x,\r\n                yed: self.node.y,\r\n                x: this.x,\r\n                y: this.y,\r\n              });\r\n              console.table(map.movecode);\r\n              sendchessPosition(map.movecode);\r\n              this.setScale(1, 1);\r\n              this.off(\"touchstart\", this.function, posmove[i]);\r\n            }\r\n          }\r\n          for (var reset = 0; reset < posmove.length; reset++) {\r\n            posmove[reset].setScale(1, 1);\r\n            posmove[reset].active = false;\r\n          }\r\n        },\r\n        posmove[i]\r\n      );\r\n    }\r\n  },\r\n  blacktouchmove(i) {\r\n    let updateall = this.updateall.getComponent(\"update\");\r\n    let map = this.map.getComponent(\"boardinfo\");\r\n    let deadredchess = this.deadredchess;\r\n    var place = this.place;\r\n    var posmove = place.getChildren();\r\n    var redchess = this.redchess;\r\n    var redc = redchess.getChildren();\r\n    var blackchess = this.blackchess;\r\n    var blackc = blackchess.getChildren();\r\n    redc.parent = place;\r\n    blackc.parent = place;\r\n    if (posmove[i].active == true) {\r\n      posmove[i].on(\r\n        \"touchstart\",\r\n        function () {\r\n          if (self.node.isChildOf(blackchess)) {\r\n            var kill = 0;\r\n            for (var j = 0; j < redc.length; j++) {\r\n              if (redc[j].x == this.x && redc[j].y == this.y) {\r\n                senddeadchess({\r\n                  name: redc[j].name,\r\n                });\r\n\r\n                kill++;\r\n                map.movecode.push({\r\n                  name: self.node.name,\r\n                  xed: self.node.x,\r\n                  yed: self.node.y,\r\n                  x: this.x,\r\n                  y: this.y,\r\n                });\r\n                console.table(map.movecode);\r\n                sendchessPosition(map.movecode);\r\n                this.setScale(1, 1);\r\n                this.off(\"touchstart\", this.function, posmove[i]);\r\n                break;\r\n              }\r\n            }\r\n            if (kill == 0) {\r\n              map.movecode.push({\r\n                name: self.node.name,\r\n                xed: self.node.x,\r\n                yed: self.node.y,\r\n                x: this.x,\r\n                y: this.y,\r\n              });\r\n              console.table(map.movecode);\r\n              sendchessPosition(map.movecode);\r\n              this.setScale(1, 1);\r\n              this.off(\"touchstart\", this.function, posmove[i]);\r\n            }\r\n          }\r\n          for (var reset = 0; reset < posmove.length; reset++) {\r\n            posmove[reset].setScale(1, 1);\r\n            posmove[reset].active = false;\r\n          }\r\n        },\r\n        posmove[i]\r\n      );\r\n    }\r\n  },\r\n  // newposition(name, x, y){\r\n  //     return 'name', x, y;\r\n  // },\r\n  start() {},\r\n  onLoad() {},\r\n  update(dt) {},\r\n});\r\n"]}