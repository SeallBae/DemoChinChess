{"version":3,"sources":["assets\\script\\room\\showrooms.js"],"names":["cc","Class","Component","properties","listrooms","type","Label","onLoad","show_rooms","roomlist","then","data","i","length","Player1","Player2","JSON","stringify","id","string","console","log","start","update","dt"],"mappings":";;;;;;AAAA;;AACA;;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACP,aAASD,EAAE,CAACE,SADL;AAEPC,EAAAA,UAAU,EAAE;AACVC,IAAAA,SAAS,EAAE;AACT,iBAAS,IADA;AAETC,MAAAA,IAAI,EAAEL,EAAE,CAACM;AAFA,KADD,CAKV;AACA;AACA;AACA;;AARU,GAFL;AAYPC,EAAAA,MAZO,oBAYE,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAzBM;AA0BPC,EAAAA,UA1BO,wBA0BM;AACX,QAAIJ,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIK,QAAQ,GAAG,EAAf;AACA,yCACGC,IADH,CACQ,UAACC,IAAD,EAAU;AACd,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACA,IAAL,CAAUE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,YAAID,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaE,OAAb,IAAwB,IAAxB,IAAgCH,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaG,OAAb,IAAwB,IAA5D,EAAkE;AAChEN,UAAAA,QAAQ,IACNO,IAAI,CAACC,SAAL,CAAe,aAAaN,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaM,EAA1B,GAA+B,WAA9C,IAA6D,IAD/D;AAED,SAHD,MAGO,IACLP,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaE,OAAb,IAAwB,IAAxB,IACAH,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaG,OAAb,IAAwB,IAFnB,EAGL;AACAN,UAAAA,QAAQ,IACNO,IAAI,CAACC,SAAL,CAAe,aAAaN,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaM,EAA1B,GAA+B,UAA9C,IAA4D,IAD9D;AAED,SANM,MAMA,IACLP,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaE,OAAb,IAAwB,IAAxB,IACAH,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaG,OAAb,IAAwB,IAFnB,EAGL;AACAN,UAAAA,QAAQ,IACNO,IAAI,CAACC,SAAL,CAAe,aAAaN,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaM,EAA1B,GAA+B,UAA9C,IAA4D,IAD9D;AAED,SANM,MAMA,IACLP,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaE,OAAb,IAAwB,IAAxB,IACAH,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaG,OAAb,IAAwB,IAFnB,EAGL;AACAN,UAAAA,QAAQ,IACNO,IAAI,CAACC,SAAL,CAAe,aAAaN,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaM,EAA1B,GAA+B,UAA9C,IAA4D,IAD9D;AAED;AACF;;AACDd,MAAAA,SAAS,CAACe,MAAV,GAAmBV,QAAnB;AACD,KA3BH,WA4BS,YAAY;AACjBW,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KA9BH;AA+BD,GA5DM;AA6DPC,EAAAA,KA7DO,mBA6DC,CAAE,CA7DH;AA8DPC,EAAAA,MA9DO,kBA8DAC,EA9DA,EA8DI,CAAE;AA9DN,CAAT","sourceRoot":"/","sourcesContent":["import { receiveduserID } from \"../socket_connection\";\r\nimport { getUserbyID, getroomlist } from \"../axios_connection\";\r\n// const fetch = require('node-fetch')\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n  properties: {\r\n    listrooms: {\r\n      default: null,\r\n      type: cc.Label,\r\n    },\r\n    // id: {\r\n    //   default: null,\r\n    //   type: cc.Label,\r\n    // },\r\n  },\r\n  onLoad() {\r\n    // let id = this.id;\r\n    // receiveduserID().then((data) => {\r\n    //   let uid = data;\r\n    //   let name = this.namedisplay;\r\n    //   getUserbyID(uid).then((data) => {\r\n    //     id.string = data.data.Username + \" #\" + uid;\r\n    //   }).catch(function () {\r\n    //     console.log(\"Promise Rejected\");\r\n    //   });\r\n    // }).catch(function () {\r\n    //   console.log(\"Promise Rejected\");\r\n    // });\r\n  },\r\n  show_rooms() {\r\n    let listrooms = this.listrooms;\r\n    let roomlist = [];\r\n    getroomlist()\r\n      .then((data) => {\r\n        for (var i = 0; i < data.data.length; i++) {\r\n          if (data.data[i].Player1 != null && data.data[i].Player2 != null) {\r\n            roomlist +=\r\n              JSON.stringify(\"Room no \" + data.data[i].id + \" --- full\") + \"\\n\";\r\n          } else if (\r\n            data.data[i].Player1 != null &&\r\n            data.data[i].Player2 == null\r\n          ) {\r\n            roomlist +=\r\n              JSON.stringify(\"Room no \" + data.data[i].id + \" --- 1/2\") + \"\\n\";\r\n          } else if (\r\n            data.data[i].Player1 == null &&\r\n            data.data[i].Player2 != null\r\n          ) {\r\n            roomlist +=\r\n              JSON.stringify(\"Room no \" + data.data[i].id + \" --- 1/2\") + \"\\n\";\r\n          } else if (\r\n            data.data[i].Player1 == null &&\r\n            data.data[i].Player2 == null\r\n          ) {\r\n            roomlist +=\r\n              JSON.stringify(\"Room no \" + data.data[i].id + \" --- 0/2\") + \"\\n\";\r\n          }\r\n        }\r\n        listrooms.string = roomlist;\r\n      })\r\n      .catch(function () {\r\n        console.log(\"Promise Rejected\");\r\n      });\r\n  },\r\n  start() {},\r\n  update(dt) {},\r\n});\r\n"]}