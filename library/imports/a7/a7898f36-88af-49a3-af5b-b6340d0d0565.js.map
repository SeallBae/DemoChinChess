{"version":3,"sources":["assets\\script\\board\\chess\\redchess\\canonred.js"],"names":["cc","Class","Component","properties","place","type","Node","redchess","blackchess","map","showpossiblemove","getComponent","touchmove","posmove","getChildren","redc","blackc","parent","self","i","length","active","pauseSystemEvents","x","node","j","y","k","bipod","target","setScale","scale","console","log","redtouchmove","start"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        place: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        redchess: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        blackchess: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        map:{\r\n            default: null,\r\n            type: cc.Node,\r\n        }\r\n    },\r\n\r\n    showpossiblemove(){\r\n        let map = this.map.getComponent('boardinfo');\r\n        let touchmove = this.map.getComponent('touchmove');\r\n        var place = this.place;\r\n        var posmove = place.getChildren();\r\n        var redchess = this.redchess;\r\n        var redc = redchess.getChildren();\r\n        var blackchess = this.blackchess;\r\n        var blackc = blackchess.getChildren();\r\n        redc.parent = place;\r\n        blackc.parent = place;\r\n        self = this;\r\n                //deactive before another click\r\n                for (var i = 0; i < posmove.length; i++) {\r\n                    if (posmove[i].active == true) {\r\n                        posmove[i].active = false;\r\n                    }\r\n                }\r\n                //redturn\r\n                blackchess.pauseSystemEvents(true);\r\n                //logic moving\r\n                for (var i = 0; i < posmove.length; i++) {\r\n                    //vertical\r\n                    if (posmove[i].x == self.node.x) {\r\n                        posmove[i].active = true;\r\n                        //verticalblock\r\n                        for (var j = 0; j < redc.length; j++) {\r\n                            if ((redc[j].x == self.node.x) && (redc[j].y != self.node.y)) {\r\n                                if (((posmove[i].y > redc[j].y) && (redc[j].y > self.node.y))\r\n                                    || ((posmove[i].y < redc[j].y) && (redc[j].y < self.node.y))) {\r\n                                    posmove[i].active = false;\r\n                                }\r\n                            }\r\n                        }\r\n                        for (var k = 0; k < blackc.length; k++) {\r\n                            if ((blackc[k].x == self.node.x) && (blackc[k].y != self.node.y)) {\r\n                                if (((posmove[i].y >= blackc[k].y) && (blackc[k].y > self.node.y))\r\n                                    || ((posmove[i].y <= blackc[k].y) && (blackc[k].y < self.node.y))) {\r\n                                    posmove[i].active = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //horizontal\r\n                    if (posmove[i].y == self.node.y) {\r\n                        posmove[i].active = true;\r\n                        //horizontalblock\r\n                        for (var j = 0; j < redc.length; j++) {\r\n                            if ((redc[j].y == self.node.y) && (redc[j].x != self.node.x)) {\r\n                                if (((posmove[i].x > redc[j].x) && (redc[j].x > self.node.x))\r\n                                    || ((posmove[i].x < redc[j].x) && (redc[j].x < self.node.x))) {\r\n                                    posmove[i].active = false;\r\n                                }\r\n                            }\r\n                        }\r\n                        for (var k = 0; k < blackc.length; k++) {\r\n                            if ((blackc[k].y == self.node.y) && (blackc[k].x != self.node.x)) {\r\n                                if (((posmove[i].x >= blackc[k].x) && (blackc[k].x > self.node.x))\r\n                                    || ((posmove[i].x <= blackc[k].x) && (blackc[k].x < self.node.x))) {\r\n                                    posmove[i].active = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //canonshot\r\n                    //up\r\n                    if ((posmove[i].x == self.node.x) && (posmove[i].y > self.node.y)) {\r\n                        for (var k = 0; k < blackc.length; k++) {\r\n                            if ((posmove[i].x == blackc[k].x) && (posmove[i].y == blackc[k].y)) {\r\n                                for (var bipod = 0; bipod < redc.length; bipod++) {\r\n                                    if ((self.node.y < redc[bipod].y) &&\r\n                                        (redc[bipod].y < blackc[k].y) &&\r\n                                        (redc[bipod].x == self.node.x)) {\r\n                                        posmove[i].active = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (posmove[i].active == false) {\r\n                                    for (var bipod = 0; bipod < blackc.length; bipod++) {\r\n                                        if ((self.node.y < blackc[bipod].y) &&\r\n                                            (blackc[bipod].y < blackc[k].y) &&\r\n                                            (blackc[bipod].x == self.node.x)) {\r\n                                            posmove[i].active = true;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }//check whether target is already found\r\n                                if (posmove[i].active == true) {\r\n                                    for (var target = 0; target < posmove.length; target++) {\r\n                                        for (var k = 0; k < blackc.length; k++) {\r\n                                            if ((posmove[i].y > posmove[target].y) &&\r\n                                                (posmove[target].y > self.node.y) &&\r\n                                                (posmove[target].x == blackc[k].x) &&\r\n                                                (posmove[target].y == blackc[k].y)) {\r\n                                                if (posmove[target].active == true) {\r\n                                                    posmove[i].active = false;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //right\r\n                    if ((posmove[i].y == self.node.y) && (posmove[i].x > self.node.x)) {\r\n                        for (var k = 0; k < blackc.length; k++) {\r\n                            if ((posmove[i].x == blackc[k].x) && (posmove[i].y == blackc[k].y)) {\r\n                                for (var bipod = 0; bipod < redc.length; bipod++) {\r\n                                    if ((self.node.x < redc[bipod].x) &&\r\n                                        (redc[bipod].x < blackc[k].x) &&\r\n                                        (redc[bipod].y == self.node.y)) {\r\n                                        posmove[i].active = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (posmove[i].active == false) {\r\n                                    for (var bipod = 0; bipod < blackc.length; bipod++) {\r\n                                        if ((self.node.x < blackc[bipod].x) &&\r\n                                            (blackc[bipod].x < blackc[k].x) &&\r\n                                            (blackc[bipod].y == self.node.y)) {\r\n                                            posmove[i].active = true;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }//check whether target is already found\r\n                                if (posmove[i].active == true) {\r\n                                    for (var target = 0; target < posmove.length; target++) {\r\n                                        for (var k = 0; k < blackc.length; k++) {\r\n                                            if ((posmove[i].x > posmove[target].x) &&\r\n                                                (posmove[target].x > self.node.x) &&\r\n                                                (posmove[target].y == blackc[k].y) &&\r\n                                                (posmove[target].x == blackc[k].x)) {\r\n                                                if (posmove[target].active == true) {\r\n                                                    posmove[i].active = false;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //block other chess\r\n                    for (var j = 0; j < redc.length; j++) {\r\n                        if ((redc[j].x == posmove[i].x) && (redc[j].y == posmove[i].y)) {\r\n                            posmove[i].active = false;\r\n                        }\r\n                    }\r\n                    //hightlight killable\r\n                    for (var k = 0; k < blackc.length; k++) {\r\n                        if ((blackc[k].x == posmove[i].x) &&\r\n                            (blackc[k].y == posmove[i].y) &&\r\n                            (posmove[i].active == true)) {\r\n                            posmove[i].setScale(map.scale, map.scale);\r\n                        }\r\n                    }\r\n                }\r\n                // down and left canon shots\r\n                for (var i = posmove.length - 1; i >= 0; i--) {\r\n                    //canonshot\r\n                    //down\r\n                    if ((posmove[i].x == self.node.x) && (posmove[i].y < self.node.y)) {\r\n                        for (var k = 0; k < blackc.length; k++) {\r\n                            if ((posmove[i].x == blackc[k].x) && (posmove[i].y == blackc[k].y)) {\r\n                                for (var bipod = 0; bipod < redc.length; bipod++) {\r\n                                    if ((self.node.y > redc[bipod].y) &&\r\n                                        (redc[bipod].y > blackc[k].y) &&\r\n                                        (redc[bipod].x == self.node.x)) {\r\n                                        posmove[i].active = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (posmove[i].active == false) {\r\n                                    for (var bipod = 0; bipod < blackc.length; bipod++) {\r\n                                        if ((self.node.y > blackc[bipod].y) &&\r\n                                            (blackc[bipod].y > blackc[k].y) &&\r\n                                            (blackc[bipod].x == self.node.x)) {\r\n                                            posmove[i].active = true;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }//check whether target is already found\r\n                                if (posmove[i].active == true) {\r\n                                    for (var target = posmove.length - 1; target >= 0; target--) {\r\n                                        for (var k = 0; k < blackc.length; k++) {\r\n                                            if ((posmove[i].y < posmove[target].y) &&\r\n                                                (posmove[target].y < self.node.y) &&\r\n                                                (posmove[target].x == blackc[k].x) &&\r\n                                                (posmove[target].y == blackc[k].y)) {\r\n                                                if (posmove[target].active == true) {\r\n                                                    console.log('reach black target');\r\n                                                    posmove[i].active = false;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //left\r\n                    if ((posmove[i].y == self.node.y) && (posmove[i].x < self.node.x)) {\r\n                        for (var k = 0; k < blackc.length; k++) {\r\n                            if ((posmove[i].y == blackc[k].y) && (posmove[i].x == blackc[k].x)) {\r\n                                for (var bipod = 0; bipod < redc.length; bipod++) {\r\n                                    if ((self.node.x > redc[bipod].x) &&\r\n                                        (redc[bipod].x > blackc[k].x) &&\r\n                                        (redc[bipod].y == self.node.y)) {\r\n                                        posmove[i].active = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (posmove[i].active == false) {\r\n                                    for (var bipod = 0; bipod < blackc.length; bipod++) {\r\n                                        if ((self.node.x > blackc[bipod].x) &&\r\n                                            (blackc[bipod].x > blackc[k].x) &&\r\n                                            (blackc[bipod].y == self.node.y)) {\r\n                                            posmove[i].active = true;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }//check whether target is already found\r\n                                if (posmove[i].active == true) {\r\n                                    for (var target = posmove.length - 1; target >= 0; target--) {\r\n                                        for (var k = 0; k < blackc.length; k++) {\r\n                                            if ((posmove[i].x < posmove[target].x) &&\r\n                                                (posmove[target].x < self.node.x) &&\r\n                                                (posmove[target].y == blackc[k].y) &&\r\n                                                (posmove[target].x == blackc[k].x)) {\r\n                                                if (posmove[target].active == true) {\r\n                                                    posmove[i].active = false;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //hightlight killable\r\n                    for (var k = 0; k < blackc.length; k++) {\r\n                        if ((blackc[k].x == posmove[i].x) &&\r\n                            (blackc[k].y == posmove[i].y) &&\r\n                            (posmove[i].active == true)) {\r\n                            posmove[i].setScale(map.scale, map.scale);\r\n                        }\r\n                    }\r\n                }\r\n                for (var i = 0; i < posmove.length; i++) {\r\n                    touchmove.redtouchmove(i);\r\n                }\r\n                \r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}